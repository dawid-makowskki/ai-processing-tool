version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ai-doc-processor-db-dev
    environment:
      POSTGRES_DB: ai_document_processor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - ai-doc-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ai_document_processor"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: ai-doc-processor-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - ai-doc-network-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AI Document Processing Application (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: ai-doc-processor-app-dev
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: ai_document_processor
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: gpt-3.5-turbo
      USE_LOCAL_STORAGE: ${USE_LOCAL_STORAGE:-false}
      UPLOAD_DIR: ./uploads
      AWS_REGION: ${AWS_REGION:-us-east-1}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - app_uploads_dev:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ai-doc-network-dev
    restart: unless-stopped
    command: npm run start:dev

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  app_uploads_dev:
    driver: local

networks:
  ai-doc-network-dev:
    driver: bridge 